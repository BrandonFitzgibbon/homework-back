openapi: 3.0.0
info:
  title: forum
  description: forum api spec for homework project
  version: 0.0.2
servers:
  - url: http://localhost:8001/
    description: local server
  - url: https://api.brandonfitzgibbon.com
    description: production server
paths:
  /:
    get:
      summary: health check for endpoint monitoring
      tags:
        - health
      operationId: health
      responses:
        '200':
          description: healthy endpoint
  /entries:
    get:
      summary: gets all forum post entries
      operationId: getEntries
      tags:
        - entries
      parameters:
        - in: query
          name: name
          schema:
            type: string
          required: false
          description: name of entry author
      responses:
        '200':
          description: a JSON array of entries
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/entry'
        '503':
          $ref: '#/components/responses/NotReady'
    post:
      summary: creates new forum posts entries
      operationId: postEntries
      tags:
        - entries
      requestBody:
        description: a JSON object representing an entry
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/entry'
      responses:
        '200':
          description: a JSON object containing the entry text
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/entry'
        '503':
          $ref: '#/components/responses/NotReady'
  /entries/{id}:
    get:
      summary: get an entry by id
      operationId: getEntry
      tags:
        - entries
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: entry id
      responses:
        '200':
          description: an JSON object representing an entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/entry'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/NotReady'
  /entries/{id}/replies:
    get:
      summary: get all replies to the entry referenced by path id
      operationId: getReplies
      tags:
        - replies
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: entry id
      responses:
        '200':
          description: an JSON object representing a reply
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reply'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/NotReady'
    post:
      summary: post an entry as a reply to the entry referenced by path id
      operationId: postReply
      tags:
        - replies
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: entry id
      requestBody:
        description: a JSON object representing an entry
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/entry'
      responses:
        '200':
          description: an JSON object representing a reply to an entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/reply'
        '404':
          $ref: '#/components/responses/NotFound'
        '503':
          $ref: '#/components/responses/NotReady'
components:
  responses:
    NotReady:
      description: service not ready
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errors'
    NotFound:
      description: not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errors'
  schemas:
    dataItem:
      type: object
      required:
        - _id
      properties:
        _id:
          type: string
          readOnly: true
    entry:
      allOf:
        - $ref: '#/components/schemas/dataItem'
        - type: object
          required: 
            - content
            - name
            - dateTime
          properties:
            content:
              type: string
            name:
              type: string
            dateTime:
              type: string
              format: date-time
              readOnly: true
    reply:
      allOf:
        - $ref: '#/components/schemas/entry'
        - type: object
          required:
            - target_id
          properties:
            target_id:
              type: string
    errors:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/error'
    error:
      type: object
      properties:
        errorCode:
          type: string
        location:
          type: string
        message:
          type: string
        path:
          type: string